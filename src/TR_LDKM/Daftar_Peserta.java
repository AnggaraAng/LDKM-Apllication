/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TR_LDKM;


import java.awt.Component;
import java.awt.HeadlessException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

public class Daftar_Peserta extends javax.swing.JFrame {

    DBConnection konn = new DBConnection();
    Connection koneksi = konn.getConn();
    
    public Daftar_Peserta() {
        initComponents();
        Tampil_Data();
        jTSearchNIM.setText("Search : NIM");
        int jmlh = jTDaftarPeserta.getRowCount();
        jTJmlhPendaftar.setText(""+jmlh+" Peserta");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBHome = new javax.swing.JButton();
        jTJmlhPendaftar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jBDaftar = new javax.swing.JButton();
        jBRefresh = new javax.swing.JButton();
        jBSearch = new javax.swing.JButton();
        jBxport = new javax.swing.JButton();
        jTSearchNIM = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTDaftarPeserta = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBHome.setBackground(new java.awt.Color(255, 255, 255));
        jBHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pict/Home.png"))); // NOI18N
        jBHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHomeActionPerformed(evt);
            }
        });
        getContentPane().add(jBHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 40, 50, 40));

        jTJmlhPendaftar.setEditable(false);
        jTJmlhPendaftar.setBackground(new java.awt.Color(255, 255, 255));
        jTJmlhPendaftar.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jTJmlhPendaftar.setForeground(new java.awt.Color(255, 0, 0));
        jTJmlhPendaftar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTJmlhPendaftar.setText("999 Peserta");
        jTJmlhPendaftar.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jTJmlhPendaftar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTJmlhPendaftarActionPerformed(evt);
            }
        });
        getContentPane().add(jTJmlhPendaftar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 120, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Daftar Peserta LDKM");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 330, 32));

        jBDaftar.setBackground(new java.awt.Color(255, 255, 255));
        jBDaftar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pict/Adds.png"))); // NOI18N
        jBDaftar.setText(" Daftar");
        jBDaftar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDaftarActionPerformed(evt);
            }
        });
        getContentPane().add(jBDaftar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 520, -1, 30));

        jBRefresh.setBackground(new java.awt.Color(255, 255, 255));
        jBRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pict/RefreshK.png"))); // NOI18N
        jBRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRefreshActionPerformed(evt);
            }
        });
        getContentPane().add(jBRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 520, 40, 30));

        jBSearch.setBackground(new java.awt.Color(255, 255, 255));
        jBSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pict/SearchK.png"))); // NOI18N
        jBSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSearchActionPerformed(evt);
            }
        });
        getContentPane().add(jBSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 520, 40, 30));

        jBxport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pict/xls.png"))); // NOI18N
        jBxport.setText(" Export");
        jBxport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBxportActionPerformed(evt);
            }
        });
        getContentPane().add(jBxport, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 520, 100, 30));

        jTSearchNIM.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTSearchNIM.setText("Search : NIM");
        jTSearchNIM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTSearchNIMMouseClicked(evt);
            }
        });
        jTSearchNIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTSearchNIMActionPerformed(evt);
            }
        });
        jTSearchNIM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTSearchNIMKeyPressed(evt);
            }
        });
        getContentPane().add(jTSearchNIM, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 520, 190, 30));

        jTDaftarPeserta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NIM", "Nama", "Jenis Kelamin", "No.Telp", "Penyakit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTDaftarPeserta.setEnabled(false);
        jScrollPane1.setViewportView(jTDaftarPeserta);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 700, 400));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pict/ListPeserta.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHomeActionPerformed
        Home pindah = new Home();
        pindah.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBHomeActionPerformed

    private void jTSearchNIMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTSearchNIMMouseClicked
        jTSearchNIM.setText("");
    }//GEN-LAST:event_jTSearchNIMMouseClicked

    private void jTSearchNIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTSearchNIMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTSearchNIMActionPerformed

    private void jTSearchNIMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTSearchNIMKeyPressed

    }//GEN-LAST:event_jTSearchNIMKeyPressed

    private void jBSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSearchActionPerformed
        if (jTSearchNIM.getText().equals("Search : NIM")){
            JOptionPane.showMessageDialog(null, "Isi Kolom Search : NIM", "PERHATIAN", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                Statement stat;
                stat = koneksi.createStatement();
                ResultSet data = stat.executeQuery("SELECT * FROM tb_peserta WHERE " + "NIM ='" + jTSearchNIM.getText() + "'");
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Nama");
                model.addColumn("NIM");
                model.addColumn("Jenis Kelamin");
                model.addColumn("No.Telp");
                model.addColumn("Penyakit");
                jTDaftarPeserta.setModel(model);
                if (data.next()) {
                    model.addRow(new Object[]{
                        data.getString("NIM"),
                        data.getString("nama"),
                        data.getString("jenis_kelamin"),
                        data.getString("No_hp"),
                        data.getString("penyakit"),
                    });
                    jTDaftarPeserta.setModel(model);
                } else {
                    JOptionPane.showMessageDialog(null, "Data Tidak Ditemukan", "Perhatian", JOptionPane.WARNING_MESSAGE);
                    Tampil_Data();
                    jTSearchNIM.setText("Search : NIM");
                }
                stat.close();
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "Error : " +e, "Search", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBSearchActionPerformed

    private void jBDaftarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDaftarActionPerformed
        Menu_User pindah = new Menu_User();
        pindah.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBDaftarActionPerformed

    private void jBRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRefreshActionPerformed
        Tampil_Data();
        jTSearchNIM.setText("Search : NIM");
    }//GEN-LAST:event_jBRefreshActionPerformed

    private void jBxportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBxportActionPerformed
        JFileChooser pilih = new JFileChooser();
        pilih.showSaveDialog(null);
        File f = pilih.getSelectedFile();
        String di = f.getAbsolutePath()+".xls";
        File file = new File (di);
        try {
            FileWriter FW = new FileWriter(file);
            BufferedWriter BW = new BufferedWriter(FW);
            for (int i = 0; i <jTDaftarPeserta.getColumnCount(); i++) {
                BW.write(jTDaftarPeserta.getColumnName(i)+"\t");
            }
            BW.write("\n");
            for (int i = 0; i < jTDaftarPeserta.getRowCount(); i++) {
                for (int j = 0; j < jTDaftarPeserta.getColumnCount(); j++) {
                    BW.write(jTDaftarPeserta.getValueAt(i, j)+"\t");
                }
                BW.write("\n");
            }
            JOptionPane.showMessageDialog(null, "Export Berhasil ", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            BW.close();
            FW.close();
        } catch (IOException e){
            JOptionPane.showMessageDialog(null, "Export Gagal : " +e, "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBxportActionPerformed

    private void jTJmlhPendaftarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTJmlhPendaftarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTJmlhPendaftarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Daftar_Peserta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Daftar_Peserta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Daftar_Peserta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Daftar_Peserta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Daftar_Peserta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBDaftar;
    private javax.swing.JButton jBHome;
    private javax.swing.JButton jBRefresh;
    private javax.swing.JButton jBSearch;
    private javax.swing.JButton jBxport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTDaftarPeserta;
    private javax.swing.JTextField jTJmlhPendaftar;
    private javax.swing.JTextField jTSearchNIM;
    // End of variables declaration//GEN-END:variables
    
    private void Tampil_Data(){
        DefaultTableModel model = new DefaultTableModel();
            model.addColumn("NIM");
            model.addColumn("Nama");
            model.addColumn("Jenis Kelamin");
            model.addColumn("No.Telp");
            model.addColumn("Penyakit");
        jTDaftarPeserta.setModel(model);
        try {
            Statement stat = koneksi.createStatement();
            ResultSet data = stat.executeQuery("SELECT * FROM tb_peserta");
            while (data.next()) {
                model.addRow(new Object[]{
                    data.getString("NIM"),
                    data.getString("nama"),
                    data.getString("jenis_kelamin"),
                    data.getString("No_hp"),
                    data.getString("penyakit")
                });
                jTDaftarPeserta.setModel(model);
            }
        } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error : " +e, "Tampil Data", JOptionPane.WARNING_MESSAGE);
        }
        TableColumnModel modelKolom = jTDaftarPeserta.getColumnModel();
        for (int kol = 0; kol < modelKolom.getColumnCount(); kol++) {
            int lebarKolomMax = 0;
            for (int baris = 0; baris < jTDaftarPeserta.getRowCount(); baris++) {
                TableCellRenderer rend = jTDaftarPeserta.getCellRenderer(baris, kol);
                Object nilaiTablel = jTDaftarPeserta.getValueAt(baris, kol);
                Component comp = rend.getTableCellRendererComponent(jTDaftarPeserta, nilaiTablel, false, false, baris, kol);
                lebarKolomMax = Math.max(comp.getPreferredSize().width, lebarKolomMax);
            }
            TableColumn kolom = modelKolom.getColumn(kol);
            kolom.setPreferredWidth(lebarKolomMax);
        }
    }
}
